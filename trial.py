# trial.py
import logging
from aiogram import Router, F
from aiogram.types import CallbackQuery, Message, InlineKeyboardMarkup, InlineKeyboardButton

import db
from marzban_api import create_paid_user, get_user_subscription_link

trial_router = Router(name="trial")

TRIAL_DAYS = 7

@trial_router.callback_query(F.data == "get_trial")
async def get_trial_handler(callback: CallbackQuery):
    user_id = callback.from_user.id

    # –ü—Ä–æ–≤–µ—Ä–∏–º, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –ª–∏ —é–∑–µ—Ä —É–∂–µ —Ç—Ä–∏–∞–ª
    already = await db.has_trial(user_id)
    if already:
        await callback.answer("‚ùå –í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥.", show_alert=True)
        return

    # –°–æ–∑–¥–∞—ë–º —Ç—Ä–∏–∞–ª-–ø–æ–¥–ø–∏—Å–∫—É –≤ –ø–∞–Ω–µ–ª–∏
    username = f"trial_{user_id}"
    try:
        created = await create_paid_user(username=username, months=0, trial_days=TRIAL_DAYS)
    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç—Ä–∏–∞–ª–∞: %s", e)
        await callback.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ–±–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏.", show_alert=True)
        return

    if not created:
        await callback.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É.", show_alert=True)
        return

    # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É
    try:
        sub_link = await get_user_subscription_link(username=username)
    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ trial-—Å—Å—ã–ª–∫–∏: %s", e)
        sub_link = None

    # –ó–∞–ø–∏—à–µ–º –≤ –±–∞–∑—É
    await db.mark_trial_used(user_id)

    kb = None
    if sub_link:
        kb = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üîó –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞", url=sub_link)]
        ])

    await callback.message.answer(
        f"üéÅ –í–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ {TRIAL_DAYS} –¥–Ω–µ–π!\n\n"
        f"üîó –°—Å—ã–ª–∫–∞: {sub_link if sub_link else '–Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å'}",
        reply_markup=kb
    )
    await callback.answer()
